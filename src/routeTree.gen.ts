/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as notAuthLayoutRouteImport } from './routes/(not-auth)/layout'
import { Route as authLayoutRouteImport } from './routes/(auth)/layout'
import { Route as notAuthPageRouteImport } from './routes/(not-auth)/page'
import { Route as notAuthRegisterPageRouteImport } from './routes/(not-auth)/register/page'
import { Route as notAuthLoginPageRouteImport } from './routes/(not-auth)/login/page'
import { Route as authDashboardPageRouteImport } from './routes/(auth)/dashboard/page'
import { Route as authDashboardDemoTanstackQueryRouteImport } from './routes/(auth)/dashboard/demo.tanstack-query'
import { Route as authDashboardDemoOrpcTodoRouteImport } from './routes/(auth)/dashboard/demo.orpc-todo'
import { Route as authDashboardDemoMcpTodosRouteImport } from './routes/(auth)/dashboard/demo.mcp-todos'
import { Route as authDashboardDemoConvexRouteImport } from './routes/(auth)/dashboard/demo.convex'
import { Route as authDashboardDemoClerkRouteImport } from './routes/(auth)/dashboard/demo.clerk'
import { Route as authDashboardDemoStartServerFuncsRouteImport } from './routes/(auth)/dashboard/demo.start.server-funcs'
import { Route as authDashboardDemoStartApiRequestRouteImport } from './routes/(auth)/dashboard/demo.start.api-request'
import { Route as authDashboardDemoFormSimpleRouteImport } from './routes/(auth)/dashboard/demo.form.simple'
import { Route as authDashboardDemoFormAddressRouteImport } from './routes/(auth)/dashboard/demo.form.address'
import { ServerRoute as McpServerRouteImport } from './routes/mcp'
import { ServerRoute as ApiMcpTodosServerRouteImport } from './routes/api/mcp-todos'
import { ServerRoute as ApiDemoTqTodosServerRouteImport } from './routes/api/demo-tq-todos'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api/demo-names'
import { ServerRoute as ApiSplatServerRouteImport } from './routes/api/$'
import { ServerRoute as ApiRpcSplatServerRouteImport } from './routes/api/rpc.$'

const rootServerRouteImport = createServerRootRoute()

const notAuthLayoutRoute = notAuthLayoutRouteImport.update({
  id: '/(not-auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const authLayoutRoute = authLayoutRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const notAuthPageRoute = notAuthPageRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => notAuthLayoutRoute,
} as any)
const notAuthRegisterPageRoute = notAuthRegisterPageRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => notAuthLayoutRoute,
} as any)
const notAuthLoginPageRoute = notAuthLoginPageRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => notAuthLayoutRoute,
} as any)
const authDashboardPageRoute = authDashboardPageRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => authLayoutRoute,
} as any)
const authDashboardDemoTanstackQueryRoute =
  authDashboardDemoTanstackQueryRouteImport.update({
    id: '/dashboard/demo/tanstack-query',
    path: '/dashboard/demo/tanstack-query',
    getParentRoute: () => authLayoutRoute,
  } as any)
const authDashboardDemoOrpcTodoRoute =
  authDashboardDemoOrpcTodoRouteImport.update({
    id: '/dashboard/demo/orpc-todo',
    path: '/dashboard/demo/orpc-todo',
    getParentRoute: () => authLayoutRoute,
  } as any)
const authDashboardDemoMcpTodosRoute =
  authDashboardDemoMcpTodosRouteImport.update({
    id: '/dashboard/demo/mcp-todos',
    path: '/dashboard/demo/mcp-todos',
    getParentRoute: () => authLayoutRoute,
  } as any)
const authDashboardDemoConvexRoute = authDashboardDemoConvexRouteImport.update({
  id: '/dashboard/demo/convex',
  path: '/dashboard/demo/convex',
  getParentRoute: () => authLayoutRoute,
} as any)
const authDashboardDemoClerkRoute = authDashboardDemoClerkRouteImport.update({
  id: '/dashboard/demo/clerk',
  path: '/dashboard/demo/clerk',
  getParentRoute: () => authLayoutRoute,
} as any)
const authDashboardDemoStartServerFuncsRoute =
  authDashboardDemoStartServerFuncsRouteImport.update({
    id: '/dashboard/demo/start/server-funcs',
    path: '/dashboard/demo/start/server-funcs',
    getParentRoute: () => authLayoutRoute,
  } as any)
const authDashboardDemoStartApiRequestRoute =
  authDashboardDemoStartApiRequestRouteImport.update({
    id: '/dashboard/demo/start/api-request',
    path: '/dashboard/demo/start/api-request',
    getParentRoute: () => authLayoutRoute,
  } as any)
const authDashboardDemoFormSimpleRoute =
  authDashboardDemoFormSimpleRouteImport.update({
    id: '/dashboard/demo/form/simple',
    path: '/dashboard/demo/form/simple',
    getParentRoute: () => authLayoutRoute,
  } as any)
const authDashboardDemoFormAddressRoute =
  authDashboardDemoFormAddressRouteImport.update({
    id: '/dashboard/demo/form/address',
    path: '/dashboard/demo/form/address',
    getParentRoute: () => authLayoutRoute,
  } as any)
const McpServerRoute = McpServerRouteImport.update({
  id: '/mcp',
  path: '/mcp',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiMcpTodosServerRoute = ApiMcpTodosServerRouteImport.update({
  id: '/api/mcp-todos',
  path: '/api/mcp-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoTqTodosServerRoute = ApiDemoTqTodosServerRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSplatServerRoute = ApiSplatServerRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRpcSplatServerRoute = ApiRpcSplatServerRouteImport.update({
  id: '/api/rpc/$',
  path: '/api/rpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof notAuthPageRoute
  '/dashboard': typeof authDashboardPageRoute
  '/login': typeof notAuthLoginPageRoute
  '/register': typeof notAuthRegisterPageRoute
  '/dashboard/demo/clerk': typeof authDashboardDemoClerkRoute
  '/dashboard/demo/convex': typeof authDashboardDemoConvexRoute
  '/dashboard/demo/mcp-todos': typeof authDashboardDemoMcpTodosRoute
  '/dashboard/demo/orpc-todo': typeof authDashboardDemoOrpcTodoRoute
  '/dashboard/demo/tanstack-query': typeof authDashboardDemoTanstackQueryRoute
  '/dashboard/demo/form/address': typeof authDashboardDemoFormAddressRoute
  '/dashboard/demo/form/simple': typeof authDashboardDemoFormSimpleRoute
  '/dashboard/demo/start/api-request': typeof authDashboardDemoStartApiRequestRoute
  '/dashboard/demo/start/server-funcs': typeof authDashboardDemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/': typeof notAuthPageRoute
  '/dashboard': typeof authDashboardPageRoute
  '/login': typeof notAuthLoginPageRoute
  '/register': typeof notAuthRegisterPageRoute
  '/dashboard/demo/clerk': typeof authDashboardDemoClerkRoute
  '/dashboard/demo/convex': typeof authDashboardDemoConvexRoute
  '/dashboard/demo/mcp-todos': typeof authDashboardDemoMcpTodosRoute
  '/dashboard/demo/orpc-todo': typeof authDashboardDemoOrpcTodoRoute
  '/dashboard/demo/tanstack-query': typeof authDashboardDemoTanstackQueryRoute
  '/dashboard/demo/form/address': typeof authDashboardDemoFormAddressRoute
  '/dashboard/demo/form/simple': typeof authDashboardDemoFormSimpleRoute
  '/dashboard/demo/start/api-request': typeof authDashboardDemoStartApiRequestRoute
  '/dashboard/demo/start/server-funcs': typeof authDashboardDemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)': typeof authLayoutRouteWithChildren
  '/(not-auth)': typeof notAuthLayoutRouteWithChildren
  '/(not-auth)/': typeof notAuthPageRoute
  '/(auth)/dashboard/': typeof authDashboardPageRoute
  '/(not-auth)/login/': typeof notAuthLoginPageRoute
  '/(not-auth)/register/': typeof notAuthRegisterPageRoute
  '/(auth)/dashboard/demo/clerk': typeof authDashboardDemoClerkRoute
  '/(auth)/dashboard/demo/convex': typeof authDashboardDemoConvexRoute
  '/(auth)/dashboard/demo/mcp-todos': typeof authDashboardDemoMcpTodosRoute
  '/(auth)/dashboard/demo/orpc-todo': typeof authDashboardDemoOrpcTodoRoute
  '/(auth)/dashboard/demo/tanstack-query': typeof authDashboardDemoTanstackQueryRoute
  '/(auth)/dashboard/demo/form/address': typeof authDashboardDemoFormAddressRoute
  '/(auth)/dashboard/demo/form/simple': typeof authDashboardDemoFormSimpleRoute
  '/(auth)/dashboard/demo/start/api-request': typeof authDashboardDemoStartApiRequestRoute
  '/(auth)/dashboard/demo/start/server-funcs': typeof authDashboardDemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/register'
    | '/dashboard/demo/clerk'
    | '/dashboard/demo/convex'
    | '/dashboard/demo/mcp-todos'
    | '/dashboard/demo/orpc-todo'
    | '/dashboard/demo/tanstack-query'
    | '/dashboard/demo/form/address'
    | '/dashboard/demo/form/simple'
    | '/dashboard/demo/start/api-request'
    | '/dashboard/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/register'
    | '/dashboard/demo/clerk'
    | '/dashboard/demo/convex'
    | '/dashboard/demo/mcp-todos'
    | '/dashboard/demo/orpc-todo'
    | '/dashboard/demo/tanstack-query'
    | '/dashboard/demo/form/address'
    | '/dashboard/demo/form/simple'
    | '/dashboard/demo/start/api-request'
    | '/dashboard/demo/start/server-funcs'
  id:
    | '__root__'
    | '/(auth)'
    | '/(not-auth)'
    | '/(not-auth)/'
    | '/(auth)/dashboard/'
    | '/(not-auth)/login/'
    | '/(not-auth)/register/'
    | '/(auth)/dashboard/demo/clerk'
    | '/(auth)/dashboard/demo/convex'
    | '/(auth)/dashboard/demo/mcp-todos'
    | '/(auth)/dashboard/demo/orpc-todo'
    | '/(auth)/dashboard/demo/tanstack-query'
    | '/(auth)/dashboard/demo/form/address'
    | '/(auth)/dashboard/demo/form/simple'
    | '/(auth)/dashboard/demo/start/api-request'
    | '/(auth)/dashboard/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authLayoutRoute: typeof authLayoutRouteWithChildren
  notAuthLayoutRoute: typeof notAuthLayoutRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/mcp': typeof McpServerRoute
  '/api/$': typeof ApiSplatServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/mcp': typeof McpServerRoute
  '/api/$': typeof ApiSplatServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/mcp': typeof McpServerRoute
  '/api/$': typeof ApiSplatServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
  '/api/rpc/$': typeof ApiRpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/mcp'
    | '/api/$'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/rpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/mcp'
    | '/api/$'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/rpc/$'
  id:
    | '__root__'
    | '/mcp'
    | '/api/$'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
    | '/api/rpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  McpServerRoute: typeof McpServerRoute
  ApiSplatServerRoute: typeof ApiSplatServerRoute
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiDemoTqTodosServerRoute: typeof ApiDemoTqTodosServerRoute
  ApiMcpTodosServerRoute: typeof ApiMcpTodosServerRoute
  ApiRpcSplatServerRoute: typeof ApiRpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(not-auth)': {
      id: '/(not-auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof notAuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(not-auth)/': {
      id: '/(not-auth)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof notAuthPageRouteImport
      parentRoute: typeof notAuthLayoutRoute
    }
    '/(not-auth)/register/': {
      id: '/(not-auth)/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof notAuthRegisterPageRouteImport
      parentRoute: typeof notAuthLayoutRoute
    }
    '/(not-auth)/login/': {
      id: '/(not-auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof notAuthLoginPageRouteImport
      parentRoute: typeof notAuthLayoutRoute
    }
    '/(auth)/dashboard/': {
      id: '/(auth)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authDashboardPageRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/tanstack-query': {
      id: '/(auth)/dashboard/demo/tanstack-query'
      path: '/dashboard/demo/tanstack-query'
      fullPath: '/dashboard/demo/tanstack-query'
      preLoaderRoute: typeof authDashboardDemoTanstackQueryRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/orpc-todo': {
      id: '/(auth)/dashboard/demo/orpc-todo'
      path: '/dashboard/demo/orpc-todo'
      fullPath: '/dashboard/demo/orpc-todo'
      preLoaderRoute: typeof authDashboardDemoOrpcTodoRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/mcp-todos': {
      id: '/(auth)/dashboard/demo/mcp-todos'
      path: '/dashboard/demo/mcp-todos'
      fullPath: '/dashboard/demo/mcp-todos'
      preLoaderRoute: typeof authDashboardDemoMcpTodosRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/convex': {
      id: '/(auth)/dashboard/demo/convex'
      path: '/dashboard/demo/convex'
      fullPath: '/dashboard/demo/convex'
      preLoaderRoute: typeof authDashboardDemoConvexRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/clerk': {
      id: '/(auth)/dashboard/demo/clerk'
      path: '/dashboard/demo/clerk'
      fullPath: '/dashboard/demo/clerk'
      preLoaderRoute: typeof authDashboardDemoClerkRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/start/server-funcs': {
      id: '/(auth)/dashboard/demo/start/server-funcs'
      path: '/dashboard/demo/start/server-funcs'
      fullPath: '/dashboard/demo/start/server-funcs'
      preLoaderRoute: typeof authDashboardDemoStartServerFuncsRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/start/api-request': {
      id: '/(auth)/dashboard/demo/start/api-request'
      path: '/dashboard/demo/start/api-request'
      fullPath: '/dashboard/demo/start/api-request'
      preLoaderRoute: typeof authDashboardDemoStartApiRequestRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/form/simple': {
      id: '/(auth)/dashboard/demo/form/simple'
      path: '/dashboard/demo/form/simple'
      fullPath: '/dashboard/demo/form/simple'
      preLoaderRoute: typeof authDashboardDemoFormSimpleRouteImport
      parentRoute: typeof authLayoutRoute
    }
    '/(auth)/dashboard/demo/form/address': {
      id: '/(auth)/dashboard/demo/form/address'
      path: '/dashboard/demo/form/address'
      fullPath: '/dashboard/demo/form/address'
      preLoaderRoute: typeof authDashboardDemoFormAddressRouteImport
      parentRoute: typeof authLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/mcp': {
      id: '/mcp'
      path: '/mcp'
      fullPath: '/mcp'
      preLoaderRoute: typeof McpServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/mcp-todos': {
      id: '/api/mcp-todos'
      path: '/api/mcp-todos'
      fullPath: '/api/mcp-todos'
      preLoaderRoute: typeof ApiMcpTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/rpc/$': {
      id: '/api/rpc/$'
      path: '/api/rpc/$'
      fullPath: '/api/rpc/$'
      preLoaderRoute: typeof ApiRpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface authLayoutRouteChildren {
  authDashboardPageRoute: typeof authDashboardPageRoute
  authDashboardDemoClerkRoute: typeof authDashboardDemoClerkRoute
  authDashboardDemoConvexRoute: typeof authDashboardDemoConvexRoute
  authDashboardDemoMcpTodosRoute: typeof authDashboardDemoMcpTodosRoute
  authDashboardDemoOrpcTodoRoute: typeof authDashboardDemoOrpcTodoRoute
  authDashboardDemoTanstackQueryRoute: typeof authDashboardDemoTanstackQueryRoute
  authDashboardDemoFormAddressRoute: typeof authDashboardDemoFormAddressRoute
  authDashboardDemoFormSimpleRoute: typeof authDashboardDemoFormSimpleRoute
  authDashboardDemoStartApiRequestRoute: typeof authDashboardDemoStartApiRequestRoute
  authDashboardDemoStartServerFuncsRoute: typeof authDashboardDemoStartServerFuncsRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authDashboardPageRoute: authDashboardPageRoute,
  authDashboardDemoClerkRoute: authDashboardDemoClerkRoute,
  authDashboardDemoConvexRoute: authDashboardDemoConvexRoute,
  authDashboardDemoMcpTodosRoute: authDashboardDemoMcpTodosRoute,
  authDashboardDemoOrpcTodoRoute: authDashboardDemoOrpcTodoRoute,
  authDashboardDemoTanstackQueryRoute: authDashboardDemoTanstackQueryRoute,
  authDashboardDemoFormAddressRoute: authDashboardDemoFormAddressRoute,
  authDashboardDemoFormSimpleRoute: authDashboardDemoFormSimpleRoute,
  authDashboardDemoStartApiRequestRoute: authDashboardDemoStartApiRequestRoute,
  authDashboardDemoStartServerFuncsRoute:
    authDashboardDemoStartServerFuncsRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface notAuthLayoutRouteChildren {
  notAuthPageRoute: typeof notAuthPageRoute
  notAuthLoginPageRoute: typeof notAuthLoginPageRoute
  notAuthRegisterPageRoute: typeof notAuthRegisterPageRoute
}

const notAuthLayoutRouteChildren: notAuthLayoutRouteChildren = {
  notAuthPageRoute: notAuthPageRoute,
  notAuthLoginPageRoute: notAuthLoginPageRoute,
  notAuthRegisterPageRoute: notAuthRegisterPageRoute,
}

const notAuthLayoutRouteWithChildren = notAuthLayoutRoute._addFileChildren(
  notAuthLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  authLayoutRoute: authLayoutRouteWithChildren,
  notAuthLayoutRoute: notAuthLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  McpServerRoute: McpServerRoute,
  ApiSplatServerRoute: ApiSplatServerRoute,
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiDemoTqTodosServerRoute: ApiDemoTqTodosServerRoute,
  ApiMcpTodosServerRoute: ApiMcpTodosServerRoute,
  ApiRpcSplatServerRoute: ApiRpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
